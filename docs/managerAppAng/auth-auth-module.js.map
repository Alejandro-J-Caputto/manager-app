{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/pages/main-auth/main-auth.component.ts","./src/app/auth/pages/main-auth/main-auth.component.html","./src/app/auth/pages/register/register.component.ts","./src/app/auth/pages/register/register.component.html","./src/app/auth/auth.module.ts","./src/app/auth/pages/login/login.component.ts","./src/app/auth/pages/login/login.component.html"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './pages/login/login.component';\nimport { MainAuthComponent } from './pages/main-auth/main-auth.component';\nimport { RegisterComponent } from './pages/register/register.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MainAuthComponent,\n    children: [\n      {path: 'login', component: LoginComponent },\n      {path: 'register', component: RegisterComponent},\n      {path: '**', redirectTo: 'login'}\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-auth',\n  templateUrl: './main-auth.component.html',\n  styleUrls: ['./main-auth.component.scss']\n})\nexport class MainAuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ManagerAppService } from 'src/app/manager-app/services/manager-app.service';\nimport { NotifyService } from 'src/app/manager-app/services/notify.service';\nimport { NotificationsComponent } from 'src/app/shared/notifications/notifications.component';\nimport { RegisterResponse } from '../../authInterfaces/auth.interface';\nimport { AuthService } from '../../services/auth.service';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  public errorApi: string = '';\n\n  //BASIC REACTIVE FORM \n  // registerForm: FormGroup = new FormGroup({\n  //   name: new FormControl(''),\n  //   email: new FormControl(''),\n  //   password: new FormControl(''),\n  //   passwordConfirm: new FormControl('')\n\n  // });\n\n  //FORMBUILDER REACTIVE FORM \n  registerForm:FormGroup = this.fb.group({\n    name: ['', [Validators.required, Validators.minLength(3)] ,],\n    email: ['', [Validators.required, Validators.email]],\n    password: ['', [Validators.required]],\n    passwordConfirm: ['', Validators.required]\n  })\n\n  constructor(private fb:FormBuilder, private notifyService: NotifyService, private auth: AuthService, private router: Router, private notification: NotificationsComponent, private managerApp:ManagerAppService) { }\n\n  ngOnInit(): void {\n  }\n\n  //Reactive Form\n  reactiveForm(){\n    this.registerForm = this.fb.group({\n      name: [''],\n      email: [''],\n      password: [''],\n      passwordConfirm: ['']\n    })\n  }\n  //Quick validator \n  //TODO. better validation\n  isInvalid(input: string){\n    return this.registerForm.controls[input].errors \n            && this.registerForm.controls[input].touched\n  }\n\n  sendForm(){\n    this.errorApi = '';\n    if(this.registerForm.invalid) {\n      this.registerForm.markAllAsTouched()\n      return;\n    }\n    console.log(this.registerForm.value);\n\n    this.auth.authRegister(this.registerForm.value).subscribe((resp:RegisterResponse) => {\n\n      if(resp.status === 'success'){\n        this.managerApp.token = `Bearer ${resp.token}`;\n        this.managerApp.headers = new HttpHeaders().set('Authorization', this.managerApp.token);\n\n        // this.auth._token = resp.token;\n        localStorage.setItem('bearer-todo', `Bearer ${resp.token}`);\n        console.log(resp.newUser)\n        console.log(resp.token)\n        this.auth._user = resp.newUser;\n        this.notifyService.getMessage('registration');\n        this.notification.toggleNotification();\n        setTimeout(() => {\n          \n          this.router.navigateByUrl('/v2/manager-app/home/workspaces')\n        }, 2000);\n      }\n    },err => {\n      console.log(err)\n      this.errorApi = err.error.message;\n      \n    })\n\n    this.registerForm.reset();\n  }\n}\n\n","<app-notifications></app-notifications>\n<div class=\"section__auth\">\n  <div class=\"auth-card\">\n    <form  [formGroup]=\"registerForm\" (ngSubmit)=\"sendForm()\" autocomplete=\"off\" class=\"auth-card__form auth-card--register\">\n      <h2 class=\"heading-secondary u-margin-bottom-small u-margin-top\">\n        Manager-App\n      </h2>\n      <div class=\"auth-card__form__group \">\n        <input \n        type=\"text\" \n        class=\"auth-card__form__input\" \n        placeholder=\"Name\" \n        formControlName=\"name\"\n        name=\"name\" \n        id=\"name\">\n        <label \n        for=\"name\" \n        class=\"auth-card__form__label\"\n        >Name</label>\n        <p class=\"auth__error\" *ngIf=\"isInvalid('name')\" >The name is required</p>\n      </div>\n      <div class=\"auth-card__form__group\">\n        <input \n        type=\"email\" \n        class=\"auth-card__form__input\" \n        formControlName=\"email\"  \n        name=\"email\"\n        placeholder=\"Email Address\" \n        id=\"email\">\n        <label for=\"email\" class=\"auth-card__form__label\">Email Address</label>\n        <p class=\"auth__error\" *ngIf=\"isInvalid('email')\" >The email adress is required</p>\n\n      </div>\n      <div class=\"auth-card__form__group\">\n        <input type=\"password\" \n        class=\"auth-card__form__input\" \n        placeholder=\"Password\" \n        formControlName=\"password\"  \n        name=\"password\" \n        id=\"password\">\n        <label for=\"password\" class=\"auth-card__form__label\">Password</label>\n        <p class=\"auth__error\" *ngIf=\"isInvalid('password')\"  >The password is required</p>\n\n      </div>\n      <div class=\"auth-card__form__group\">\n        <input \n        type=\"password\" \n        class=\"auth-card__form__input\" \n        placeholder=\"Confirm Password\" \n        formControlName=\"passwordConfirm\"  \n        name=\"passwordConfirm\"\n        id=\"passwordConfirm\">\n        <label for=\"passwordConfirm\" class=\"auth-card__form__label\">Confirm Password</label>\n        <p class=\"auth__error\"  *ngIf=\"isInvalid('passwordConfirm')\"  >The password confirmation is required</p>\n        <p class=\"auth__error\"  *ngIf=\"errorApi\"  >{{errorApi}}</p>\n      </div>\n      <div class=\"auth-card__form__group\">\n        <button class=\"btn btn--red\" type=\"submit\"> Sign In </button>\n      </div>\n      <div class=\"auth-card__form__group u-margin-bottom-small\">\n        <p class=\"paragraph u-center-text\">Already registered? <span [routerLink]=\"['/auth/login']\" style=\"font-weight: 500; text-decoration: underline; cursor: pointer;\" > Log in </span> </p>\n      </div>\n    </form>\n    <div class=\"auth-card__icon-box\">\n      <img src=\"assets/img/file_type_angular_icon_130754.png\" class=\"auth-card__icon\" alt=\"angular icon\">\n    </div>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { MainAuthComponent } from './pages/main-auth/main-auth.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { RegisterComponent } from './pages/register/register.component';\nimport { NotificationsComponent } from '../shared/notifications/notifications.component';\nimport { SharedModule } from '../shared/shared.module';\n\n\n@NgModule({\n  declarations: [MainAuthComponent, LoginComponent, RegisterComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule\n  ]\n})\nexport class AuthModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\nimport {NgForm} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ManagerAppService } from 'src/app/manager-app/services/manager-app.service';\nimport { NotifyService } from 'src/app/manager-app/services/notify.service';\nimport { NotificationsComponent } from 'src/app/shared/notifications/notifications.component';\nimport { LoginForm, LoginResponse } from '../../authInterfaces/auth.interface';\nimport { AuthService } from '../../services/auth.service';\n\n\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  public errorApi: string = '';\n\n  login:LoginForm = {\n    email: '',\n    password: ''\n  }\n\n\n\n  constructor(private auth: AuthService, private router: Router, private notifyService: NotifyService, private notification: NotificationsComponent,private managerApp:ManagerAppService) { }\n  \n  ngOnInit(): void {\n  }\n\n  loginFormTemplate(logForm:NgForm){\n    this.errorApi = '';\n    if(logForm.invalid){\n      logForm.control.markAllAsTouched();\n      Object.values(logForm.controls).map(input => input.markAllAsTouched());\n      return;\n    }\n    if(logForm.valid){\n      console.log(this.login.password)\n      this.auth.authLogin(this.login).subscribe((resp:LoginResponse) => {\n        if(resp.status === 'success'){\n          // this.auth._token = resp.token;\n          this.managerApp.token = `Bearer ${resp.token}`;\n          this.managerApp.headers = new HttpHeaders().set('Authorization', this.managerApp.token);\n          localStorage.setItem('bearer-todo', `Bearer ${resp.token}`);\n          this.auth._user = resp.user;\n          this.notifyService.getMessage('login');\n          this.notification.toggleNotification();\n          setTimeout(() => {\n            \n            this.router.navigate(['/v2/manager-app/home/workspaces'])\n          }, 3000);\n        }\n      }, err => {\n        console.log(err)\n        this.errorApi = err.error.message;\n      });\n    }\n  }\n\n}\n","<app-notifications></app-notifications>\n<div class=\"section__auth\">\n    \n  <div class=\"auth-card\">\n    <form action=\"#\" #loginForm=\"ngForm\" (ngSubmit)=\"loginFormTemplate(loginForm)\" autocomplete=\"off\" class=\"auth-card__form\">\n      <h2 class=\"heading-secondary u-margin-bottom-small u-margin-top\">\n        Manager-App\n      </h2>\n      <div class=\"auth-card__form__group\">\n        <input \n          [(ngModel)]=\"login.email\"\n          name=\"email\"\n          #email=\"ngModel\" \n          type=\"text\" \n          class=\"auth-card__form__input\" \n          type=\"email\"\n          required\n          minlength=\"5\" \n          placeholder=\"Email Address\" \n          id=\"email\">\n        <label for=\"email\" class=\"auth-card__form__label\">Email Address</label>\n        <p class=\"auth__error\"  *ngIf=\"email.invalid && email.touched\">The email adress is required</p>\n\n      </div>\n      <div class=\"auth-card__form__group\">\n        <input \n          [(ngModel)]=\"login.password\" \n          name=\"password\" \n          #pass=\"ngModel\" \n          type=\"password\" \n          class=\"auth-card__form__input\" \n          placeholder=\"Password\" \n          id=\"password\"\n          required\n          minlength=\"5\"\n          type=\"password\"\n          >\n\n        <label for=\"password\" class=\"auth-card__form__label\">Password</label>\n      <p class=\"auth__error\"  *ngIf=\"pass.invalid && pass.touched\">The password is required</p>\n        <p *ngIf=\"errorApi\" class=\"auth__error\">{{errorApi}}</p>\n      </div>\n      <div class=\"auth-card__form__group\">\n        <button class=\"btn btn--red\" type=\"submit\"> Log in </button>\n      </div>\n      <div class=\"auth-card__form__group u-margin-bottom-small\">\n        <p class=\"paragraph u-center-text\">Don't you have an account?  <span [routerLink]=\"['/auth/register']\" style=\"font-weight: 500; text-decoration: underline; cursor: pointer;\" > Register now </span> </p>\n      </div>\n    </form>\n    <div class=\"auth-card__icon-box\">\n      <img src=\"assets/img/file_type_angular_icon_130754.png\" class=\"auth-card__icon\" alt=\"angular icon\">\n    </div>\n  </div>\n</div>\n"],"sourceRoot":"webpack:///"}